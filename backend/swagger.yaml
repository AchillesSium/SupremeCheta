openapi: 3.0.0
info:
  title: Supreme Cheta API
  description: Multi-vendor E-commerce Platform API
  version: 1.0.0
  contact:
    email: support@supremecheta.com

servers:
  - url: http://localhost:5001/api
    description: Development server
  - url: https://api.supremecheta.com
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        role:
          type: string
          enum: [customer, vendor, admin]
        profile:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            phone:
              type: string
    
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        price:
          type: number
        description:
          type: string
        vendorId:
          type: string
          format: uuid
        category:
          type: array
          items:
            type: string
        inventory:
          type: object
          properties:
            quantity:
              type: number
            status:
              type: string

    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: "Category name"
        description:
          type: string
        attribute_id:
          type: string
          format: uuid
          description: "ID of the associated attribute (if applicable)"
        parentCategory:
          type: string
          format: uuid
          nullable: true
          description: "Parent category ID (null if main category)"
        subcategories:
          type: array
          items:
            type: string
            format: uuid
          description: "List of subcategory IDs"

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input
  
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /products:
    get:
      tags:
        - Products
      summary: Get all products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: category
          schema:
            type: string
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    
    post:
      tags:
        - Products
      summary: Create a new product
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Not a vendor

  /categories:
    get:
      tags:
        - Categories
      summary: Get all categories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

    post:
      tags:
        - Categories
      summary: Create a new category
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Category created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Not an admin

  /categories/{id}:
    get:
      tags:
        - Categories
      summary: Get a category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Category not found
    
    put:
      tags:
        - Categories
      summary: Update a category
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Category not found

    delete:
      tags:
        - Categories
      summary: Delete a category
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category deleted successfully
        '404':
          description: Category not found
        '403':
          description: Forbidden - Only admins can delete categories

  /categories/{id}/subcategories:
    get:
      tags:
        - Categories
      summary: Get subcategories of a category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of subcategories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '404':
          description: Category not found
